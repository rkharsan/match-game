@import url("https://fonts.googleapis.com/css2?family=Radio+Canada:wght@400;700&display=swap");

*,
*::after,
*::before {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: "Radio Canada", sans-serif;
  background-color: #0f172a;
  color: #f8fafc;
}

img {
  display: block;
  max-width: 100%;
}

.app {
  padding: 20px;
  max-width: 960px;
  margin: 0 auto;

  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 16px;
}

.header {
  text-align: center;
}

.header h1 {
  margin: 0;
}

.stats {
  display: flex;
  gap: 20px;
  align-items: center;
  justify-content: center;
}

.stat {
  font-size: 0.7em;
  background-color: #1e3a8a;
  display: flex;
  border-radius: 16px;
  overflow: hidden;
}

.label,
.value {
  padding: 4px 8px;
}

.value {
  background-color: #1e40af;
}

button {
  background: none;
  appearance: none;
  border: none;
  font: inherit;
  color: inherit;
  line-height: inherit;

  background-color: #3b82f6;
  padding: 6px 12px;
  font-size: 0.8em;
  border-radius: 5px;

  transition: transform ease-out 0.1s, opacity ease-out 0.1s;
}

button.highlighted {
  transform: scale(1.1);
  background-color: #047857;
}

@media (hover: hover) and (pointer: fine) {
  button:hover {
    transform: scale(1.1);
  }
}

button:active {
  transform: scale(0.9);
  opacity: 0.75;
}

.board {
  /* Make entire board visible on desktops */
  max-height: 70vh;
  aspect-ratio: 1;

  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 16px;
}

.board.disabled {
  pointer-events: none;
}

.tile {
  position: relative;
  transition: transform ease-out 0.2s, opacity ease-out 0.2s;
}

@media (hover: hover) and (pointer: fine) {
  .tile:hover {
    transform: scale(1.1);
  }
}

.tile:active {
  transform: scale(0.9);
}

.tile.selected,
.tile.matched {
  transform: scale(0.9);
}

.tile .back {
  position: absolute;
  inset: 0;
}

/* Animations =============================================================== */

.front,
.back {
  transition: transform ease-out 0.2s;
}

.front {
  transform: rotateY(90deg);
}

.back {
  transform: rotateY(0deg);
  transition-delay: 0.2s;
}

.selected .front,
.matched .front {
  transform: rotateY(0deg);
  transition-delay: 0.2s;
}

.selected .back,
.matched .back {
  transform: rotateY(90deg);
  transition-delay: 0s;
}
